From 6da0875a35b79b45cbae30741e7ae662c3526acf Mon Sep 17 00:00:00 2001
From: Colin Watson <cjwatson@ubuntu.com>
Date: Mon, 13 Jan 2014 12:13:21 +0000
Subject: Generate configuration for signed UEFI kernels if available

Forwarded: no
Last-Update: 2019-06-05

Patch-Name: mkconfig_signed_kernel.patch
---
 util/grub.d/10_linux.in     | 15 +++++++++++++++
 util/grub.d/10_linux_zfs.in | 25 +++++++++++++++++++++++++
 2 files changed, 40 insertions(+)

diff --git a/util/grub.d/10_linux.in b/util/grub.d/10_linux.in
index fd3090fba..d9646b1d5 100644
--- a/util/grub.d/10_linux.in
+++ b/util/grub.d/10_linux.in
@@ -155,8 +155,16 @@ linux_entry ()
   message="$(gettext_printf "Loading Linux %s ..." ${version})"
   sed "s/^/$submenu_indentation/" << EOF
 	echo	'$(echo "$message" | grub_quote)'
+EOF
+  if test -d /sys/firmware/efi && test -e "${linux}.efi.signed"; then
+    sed "s/^/$submenu_indentation/" << EOF
+	linux	${rel_dirname}/${basename}.efi.signed root=${linux_root_device_thisversion} ro ${args}
+EOF
+  else
+    sed "s/^/$submenu_indentation/" << EOF
 	linux	${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args}
 EOF
+  fi
   if test -n "${initrd}" ; then
     # TRANSLATORS: ramdisk isn't identifier. Should be translated.
     message="$(gettext_printf "Loading initial ramdisk ...")"
@@ -204,6 +212,13 @@ submenu_indentation=""
 is_top_level=true
 while [ "x$list" != "x" ] ; do
   linux=`version_find_latest $list`
+  case $linux in
+    *.efi.signed)
+      # We handle these in linux_entry.
+      list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
+      continue
+      ;;
+  esac
   gettext_printf "Found linux image: %s\n" "$linux" >&2
   basename=`basename $linux`
   dirname=`dirname $linux`
diff --git a/util/grub.d/10_linux_zfs.in b/util/grub.d/10_linux_zfs.in
index d06d56f65..191c7d76a 100755
--- a/util/grub.d/10_linux_zfs.in
+++ b/util/grub.d/10_linux_zfs.in
@@ -282,6 +282,17 @@ get_system_directory() {
     return
 }
 
+# Return if secure boot is enabled on that system
+is_secure_boot_enabled() {
+    if LANG=C mokutil --sb-state 2>/dev/null | grep -qi enabled; then
+        echo "true"
+        return
+    fi
+    echo "false"
+    return
+}
+
+
 # Given a filesystem or snapshot dataset, returns dataset|machine id|pretty name|last used
 # $1 is dataset we want information from
 # $2 is the temporary mount directory to use
@@ -348,6 +359,20 @@ get_dataset_info() {
             continue
         fi
 
+        # filters entry if efi/non efi
+        case "${linux}" in
+            *.efi.signed)
+                if [ "$(is_secure_boot_enabled)" = "false" ]; then
+                    continue
+                fi
+            ;;
+            *)
+                if [ "$(is_secure_boot_enabled)" = "true" ]; then
+                    continue
+                fi
+            ;;
+        esac
+
         linux_basename=$(basename "${linux}")
         linux_dirname=$(dirname "${linux}")
         version=$(echo "${linux_basename}" | sed -e "s,^[^0-9]*-,,g")
